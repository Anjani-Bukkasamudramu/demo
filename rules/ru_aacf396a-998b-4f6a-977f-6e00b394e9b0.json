{
  "name": "projects/1017425675889/locations/europe-west3/instances/a099fd02-80fc-4a0f-a80c-fb5d7fe78564/rules/ru_aacf396a-998b-4f6a-977f-6e00b394e9b0",
  "revisionId": "v_1721022604_810383000",
  "displayName": "ioc_hash_prevalence",
  "text": "rule ioc_hash_prevalence {\n\n  meta:\n    author = \"Google Cloud Security\"\n    description = \"Detect process/file events that match hashes found in our MISP instance and have low rolling max prevalence\"\n    type = \"alert\"\n    tags = \"prevalence, threat indicators\"\n    assumption = \"Assumes MISP data has been ingested into entity graph; this rule can be modified to utilize other TI indicators\"\n    data_source = \"microsoft sysmon\"\n    severity = \"High\"\n    priority = \"High\"\n\n  events:\n    $process.metadata.event_type = \"FILE_CREATION\" or $process.metadata.event_type = \"PROCESS_LAUNCH\"\n    $process.target.process.file.sha256 = $sha256\n\n    // derived from events ingested by Chronicle\n    $prevalence.graph.metadata.entity_type = \"FILE\"\n    $prevalence.graph.metadata.source_type = \"DERIVED_CONTEXT\"\n    $prevalence.graph.entity.file.prevalence.day_count = 10\n    $prevalence.graph.entity.file.prevalence.rolling_max <= 3\n    $prevalence.graph.entity.file.prevalence.rolling_max > 0\n    $prevalence.graph.entity.file.sha256 = $sha256  \n\n    // Correlates with MISP data; can be modified based on your MISP parser or other TI\n    $ioc.graph.metadata.entity_type = \"FILE\"\n    $ioc.graph.metadata.source_type = \"ENTITY_CONTEXT\"\n    $ioc.graph.metadata.product_name = \"MISP\"\n    $ioc.graph.entity.file.sha256 = $sha256\n\n  match:\n    $sha256 over 5m\n\n  outcome:\n    $risk_score = max(85)\n    $event_count = count_distinct($process.metadata.id)\n    // added to populate alert graph with additional context\n    $principal_hostname = array_distinct($process.principal.hostname)\n    $principal_process_pid = array_distinct($process.principal.process.pid)\n    $principal_process_command_line = array_distinct($process.principal.process.command_line)\n    $principal_process_file_sha256 = array_distinct($process.principal.process.file.sha256)\n    $principal_process_file_full_path = array_distinct($process.principal.process.file.full_path)\n    $principal_process_product_specfic_process_id = array_distinct($process.principal.process.product_specific_process_id)\n    $principal_process_parent_process_product_specfic_process_id = array_distinct($process.principal.process.parent_process.product_specific_process_id)\n    $target_process_pid = array_distinct($process.target.process.pid)\n    $target_process_command_line = array_distinct($process.target.process.command_line)\n    // Commented out target.process.file.sha256 because it is already represented in graph as match variable. If match changes, can uncomment to add to results\n    $target_process_file_sha256 = array_distinct($process.target.process.file.sha256)\n    $target_process_file_full_path = array_distinct($process.target.process.file.full_path)\n    $target_process_product_specfic_process_id = array_distinct($process.target.process.product_specific_process_id)\n    $principal_user_userid = array_distinct($process.principal.user.userid)\n    $target_file_sha256 = array_distinct($process.target.file.sha256)\n    $target_file_full_path = array_distinct($process.target.file.full_path)\n\n  condition:\n    $process and $ioc and $prevalence\n}\n",
  "author": "Google Cloud Security",
  "severity": {
    "displayName": "High"
  },
  "metadata": {
    "tags": "prevalence, threat indicators",
    "assumption": "Assumes MISP data has been ingested into entity graph; this rule can be modified to utilize other TI indicators",
    "data_source": "microsoft sysmon",
    "priority": "High",
    "description": "Detect process/file events that match hashes found in our MISP instance and have low rolling max prevalence",
    "type": "alert"
  },
  "createTime": "2024-07-15T05:50:04.810383Z",
  "revisionCreateTime": "2024-07-15T05:50:04.810383Z",
  "compilationState": "SUCCEEDED",
  "type": "MULTI_EVENT",
  "allowedRunFrequencies": [
    "LIVE",
    "HOURLY",
    "DAILY"
  ],
  "etag": "CIzx0rQGEJjttYID",
  "inputsUsed": {
    "usesUdm": true,
    "usesEntity": true
  }
}